# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    # self-hosted
    runs-on: ubuntu-latest 
    permissions:
      issues: write 
    steps:
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
    
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}

      - name: build project
        if: github.event_name == 'push'
        run: mvn -B package --file pom.xml

      - name: upload Artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: apps.war
          path: /home/runner/work/color-lib/color-lib/target/app.war
           # path: /home/ubuntu/actions-runner/_work/color-lib/color-lib/target/app.war
          if-no-files-found: error
     
    
      - name: deploy war to tomact
        if: github.event_name == 'push'
        uses: siva1024/scp-deployer@v1.0
        with:
          host: ${{ secrets.MY_HOST }}
          username: ${{ secrets.CLOUD_UNAME }}
          key: ${{ secrets.SSH_TOKEN }}
            ### password: ${{ secrets.CLOUD_PASSWD }} 
          source: /home/runner/work/color-lib/color-lib/target/app.war
          target: /home/ubuntu/tomcat9/webapps/apps.war
            #################################################### 
      - name: TriggerJenkinsBuild
        uses: GoldenspearLLC/build-jenkins-job@1.0.0
        with:
          jenkins-url: ${{ secrets.JEN_URL }}
          user: harindra
          jenkins-token: ${{ secrets.JEN_TOKEN }}
          job_path:  "Remote_Trigger_Gaction"
